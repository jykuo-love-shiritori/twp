name: checks

on:
  workflow_dispatch:
  pull_request:
    branches:
      - "main"

jobs:
  lint:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Run Linter
        uses: golangci/golangci-lint-action@v3
        with:
          version: "v1.55"

  test:
    runs-on: "ubuntu-latest"
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Golang
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Get Dependencies
        run: go get .

      - name: Build Project
        run: go build -v ./...

      - name: Run Tests
        run: go test -v ./...
  migrate:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: root
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: db
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21.x"

      - name: Install Migrate CLI
        run: go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest

      - name: Run Database Migrations
        run: migrate -database "postgres://root:1234@localhost:5432/db?sslmode=disable" -path db/migrations up
